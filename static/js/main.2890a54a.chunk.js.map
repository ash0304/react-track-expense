{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","console","log","onSaveExpenseData","className","type","value","onChange","prevState","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpenseList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximun","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2890a54a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: '',\r\n    enteredAmount: '',\r\n    enteredDate: '',\r\n  });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        enteredTitle: event.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        enteredAmount: event.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        enteredDate: event.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const { enteredTitle, enteredAmount, enteredDate } = userInput;\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    console.log('child side', expenseData);\r\n    // pass data from child to parent\r\n    props.onSaveExpenseData(expenseData);\r\n    // clear the input\r\n    setUserInput({\r\n      enteredTitle: '',\r\n      enteredAmount: '',\r\n      enteredDate: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userInput.enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={userInput.enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={userInput.enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    // pass to app.js\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = `card ${props.className}`\r\n  return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpenseList.css';\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximun = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximun}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport './Expenses.css';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selectedYear={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpenseList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 6, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}